/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CalculateSelector } from "../CalculateSelector";

export class CalculateSelector__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<CalculateSelector> {
    return super.deploy(overrides || {}) as Promise<CalculateSelector>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CalculateSelector {
    return super.attach(address) as CalculateSelector;
  }
  connect(signer: Signer): CalculateSelector__factory {
    return super.connect(signer) as CalculateSelector__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CalculateSelector {
    return new Contract(address, _abi, signerOrProvider) as CalculateSelector;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "calculateSelector",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060908061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063bb71eb3b14602d575b600080fd5b60336050565b604080516001600160e01b03199092168252519081900360200190f35b63dcce221160e01b9056fea265627a7a7231582070c755aa7da3a00a84f7f463359aa40c21e1623691fd3c54416045614b27ddcf64736f6c63430005100032";
